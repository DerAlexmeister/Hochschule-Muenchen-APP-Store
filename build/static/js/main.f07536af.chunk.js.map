{"version":3,"sources":["MenueBar.js","Banner.js","SideNavigation.js","App.js","serviceWorker.js","index.js","assets/banner1.jpg"],"names":["withStyles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","react_default","a","createElement","className","AppBar_default","style","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","Header","top","left","right","zIndex","src","logo","alt","SideNavPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sidebarOpen","onSetSidebarOpen","bind","assertThisInitialized","open","setState","_this2","react_sidebar_esm","sidebar","onSetOpen","styles","background","onClick","React","Component","bottom","overflow","WebkitTransition","willChange","overflowY","content","WebkitOverflowScrolling","overlay","opacity","visibility","dragHandle","App","MenueBar","Banner","SideNavigation","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f07536af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: '#898989',\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction SearchAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar style={{backgroundColor: '#2E2E2E'}} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            HM AppStore\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SearchAppBar);","import logo from './assets/banner1.jpg';\r\nimport React, { Component } from 'react';\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\n\r\nfunction Header() {\r\n  return <img style={{position:\"absolute\", top:0, left:0, right:0, width:\"100%\", height:\"100%\", zIndex:-1}} src={logo} alt=\"Logo\" />;\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      overflow: \"hidden\"\r\n    },\r\n    sidebar: {\r\n      zIndex: -1,\r\n      position: \"absolute\",\r\n      top: 0,\r\n      bottom: 0,\r\n      transition: \"transform .3s ease-out\",\r\n      WebkitTransition: \"-webkit-transform .3s ease-out\",\r\n      willChange: \"transform\",\r\n      overflowY: \"auto\"\r\n    },\r\n    content: {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      overflowY: \"auto\",\r\n      WebkitOverflowScrolling: \"touch\",\r\n      transition: \"left .3s ease-out, right .3s ease-out\"\r\n    },\r\n    overlay: {\r\n      zIndex: 1,\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      opacity: 0,\r\n      visibility: \"hidden\",\r\n      transition: \"opacity .3s ease-out, visibility .3s ease-out\",\r\n      backgroundColor: \"rgba(0,0,0,.3)\"\r\n    },\r\n    dragHandle: {\r\n      zIndex: 1,\r\n      position: \"fixed\",\r\n      top: 0,\r\n      bottom: 0\r\n    }\r\n  });\r\n\r\n\r\nclass SideNavPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebarOpen: true\r\n    };\r\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\r\n  }\r\n \r\n  onSetSidebarOpen(open) {\r\n    this.setState({ sidebarOpen: open });\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <Sidebar\r\n        sidebar={<b>Sidebar content</b>}\r\n        open={this.state.sidebarOpen}\r\n        onSetOpen={this.onSetSidebarOpen}\r\n        styles={{ sidebar: { background: \"white\" } }}\r\n      >\r\n        <button onClick={() => this.onSetSidebarOpen(true)}>\r\n          Open sidebar\r\n        </button>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n \r\nexport default withStyles(styles)(SideNavPage);","import SearchAppBar from \"./MenueBar.js\";\r\nimport Header from \"./Banner.js\"\r\nimport SideNavPage from \"./SideNavigation\"\r\nimport React, { Component } from \"react\";\r\n\r\n\r\nexport default class App extends React.Component{\r\n  render(){\r\n    return (\r\n    <div> \r\n      <SearchAppBar/>\r\n      <Header/>\r\n      <SideNavPage/>\r\n    </div>\r\n    )\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';       // add this\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/banner1.a1bce353.jpg\";"],"sourceRoot":""}