# Generated by Django 2.1.7 on 2019-03-26 08:29

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('typOfAccount', models.CharField(choices=[('ST', 'Student'), ('SA', 'Staff'), ('PR', 'Professor'), ('Fr', 'Externer Student')], default='ST', max_length=2)),
                ('Fakultaet', models.CharField(choices=[('FK01', 'Fakultät 01'), ('FK02', 'Fakultät 02'), ('FK03', 'Fakultät 03'), ('FK04', 'Fakultät 04'), ('FK05', 'Fakultät 05'), ('FK06', 'Fakultät 06'), ('FK07', 'Fakultät 07'), ('FK08', 'Fakultät 08'), ('FK09', 'Fakultät 09'), ('FK10', 'Fakultät 10'), ('FK11', 'Fakultät 11'), ('FK12', 'Fakultät 12'), ('FK13', 'Fakultät 13'), ('FK14', 'Fakultät 14')], default='FK07', max_length=4)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
